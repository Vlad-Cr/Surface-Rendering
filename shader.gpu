

// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
attribute vec3 normal;
uniform mat4 ModelViewProjectionMatrix;

varying vec3 v_normal;

void main() {
    gl_Position = ModelViewProjectionMatrix * vec4(vertex,1.0);
    v_normal = normal;
}`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif

uniform vec4 color;
uniform vec3 reverseLightDirection;

varying vec3 v_normal;

void main() {
    vec3 normal = normalize(v_normal);
    float light = dot(normal, reverseLightDirection);
    gl_FragColor = color;
    gl_FragColor.rgb *= light;
}`;